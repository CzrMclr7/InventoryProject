/*
Deployment script for ProductDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ProductDB"
:setvar DefaultFilePrefix "ProductDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 0ba7a88f-0a70-4b12-bfdc-57b6c59631cd is skipped, element [dbo].[ProductAdjustment].[SalesId] (SqlSimpleColumn) will not be renamed to SalesDetailId';


GO
PRINT N'Creating Table [dbo].[ProductAdjustment]...';


GO
CREATE TABLE [dbo].[ProductAdjustment] (
    [Id]            INT           IDENTITY (1, 1) NOT NULL,
    [ProductId]     INT           NOT NULL,
    [Action]        NVARCHAR (50) NOT NULL,
    [Quantity]      INT           NULL,
    [SalesDetailId] INT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ProductAdjusment_SalesDetail]...';


GO
ALTER TABLE [dbo].[ProductAdjustment] WITH NOCHECK
    ADD CONSTRAINT [FK_ProductAdjusment_SalesDetail] FOREIGN KEY ([SalesDetailId]) REFERENCES [dbo].[SalesDetail] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ProductAdjusment_Products]...';


GO
ALTER TABLE [dbo].[ProductAdjustment] WITH NOCHECK
    ADD CONSTRAINT [FK_ProductAdjusment_Products] FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Products] ([Id]);


GO
PRINT N'Creating Procedure [dbo].[spProductAdjustment_Inq]...';


GO
CREATE PROCEDURE [dbo].[spProductAdjustment_Inq] 
	@id int = null -- Optional parameter to filter by Id
 AS 
	SELECT *  
	FROM ProductAdjustment 
	WHERE Id = COALESCE(@id, Id) 
RETURN 0
GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0ba7a88f-0a70-4b12-bfdc-57b6c59631cd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0ba7a88f-0a70-4b12-bfdc-57b6c59631cd')

GO

GO
-- Insert initial seed data into Products table 
IF NOT EXISTS (SELECT 1 FROM [dbo].[Products]) 
BEGIN 
    PRINT 'Seeding initial Products...'; 

    INSERT INTO [dbo].[Products] (Name, Qty, Price, DateCreated, CreatedById) 
    VALUES  
    ('Laptop', 10, 49999.99, GETDATE(), 1), 
    ('Monitor', 25, 8999.99, GETDATE(), 1), 
    ('Mouse', 100, 599.99, GETDATE(), 1), 
    ('Keyboard', 75, 999.99, GETDATE(), 1), 
    ('Webcam', 30, 2499.99, GETDATE(), 1); 
END
ELSE
BEGIN 
    PRINT 'Products table already seeded.'; 
END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[ProductAdjustment] WITH CHECK CHECK CONSTRAINT [FK_ProductAdjusment_SalesDetail];

ALTER TABLE [dbo].[ProductAdjustment] WITH CHECK CHECK CONSTRAINT [FK_ProductAdjusment_Products];


GO
PRINT N'Update complete.';


GO
